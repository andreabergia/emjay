program = { SOI ~ functionDeclaration+ ~ EOI }

functionDeclaration = { "fn" ~ identifier ~ "(" ~ ")" ~ block }

block = { "{" ~ statement* ~ "}" }

statement = _{ (letStatement | assignmentStatement) ~ ";" }

letStatement = { "let" ~ identifier ~ "=" ~ expression }

assignmentStatement = { identifier ~ "=" ~ expression }

expression = { factor }

factor = {number | identifier}

number = @{"-"? ~ (hexNumber | decimalNumber)}

decimalNumber = @{
    ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

hexNumber = @{ "0" ~ "x" ~ ASCII_HEX_DIGIT+ }

identifier = @{ XID_START ~ XID_CONTINUE* }

WHITESPACE = _{ " " | "\t" | NEWLINE }
